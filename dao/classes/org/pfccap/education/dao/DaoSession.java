package org.pfccap.education.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import org.pfccap.education.dao.User;
import org.pfccap.education.dao.Question;
import org.pfccap.education.dao.AnswersQuestion;
import org.pfccap.education.dao.SecondAnswer;
import org.pfccap.education.dao.Answers;

import org.pfccap.education.dao.UserDao;
import org.pfccap.education.dao.QuestionDao;
import org.pfccap.education.dao.AnswersQuestionDao;
import org.pfccap.education.dao.SecondAnswerDao;
import org.pfccap.education.dao.AnswersDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig questionDaoConfig;
    private final DaoConfig answersQuestionDaoConfig;
    private final DaoConfig secondAnswerDaoConfig;
    private final DaoConfig answersDaoConfig;

    private final UserDao userDao;
    private final QuestionDao questionDao;
    private final AnswersQuestionDao answersQuestionDao;
    private final SecondAnswerDao secondAnswerDao;
    private final AnswersDao answersDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        questionDaoConfig = daoConfigMap.get(QuestionDao.class).clone();
        questionDaoConfig.initIdentityScope(type);

        answersQuestionDaoConfig = daoConfigMap.get(AnswersQuestionDao.class).clone();
        answersQuestionDaoConfig.initIdentityScope(type);

        secondAnswerDaoConfig = daoConfigMap.get(SecondAnswerDao.class).clone();
        secondAnswerDaoConfig.initIdentityScope(type);

        answersDaoConfig = daoConfigMap.get(AnswersDao.class).clone();
        answersDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        questionDao = new QuestionDao(questionDaoConfig, this);
        answersQuestionDao = new AnswersQuestionDao(answersQuestionDaoConfig, this);
        secondAnswerDao = new SecondAnswerDao(secondAnswerDaoConfig, this);
        answersDao = new AnswersDao(answersDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Question.class, questionDao);
        registerDao(AnswersQuestion.class, answersQuestionDao);
        registerDao(SecondAnswer.class, secondAnswerDao);
        registerDao(Answers.class, answersDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        questionDaoConfig.getIdentityScope().clear();
        answersQuestionDaoConfig.getIdentityScope().clear();
        secondAnswerDaoConfig.getIdentityScope().clear();
        answersDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public QuestionDao getQuestionDao() {
        return questionDao;
    }

    public AnswersQuestionDao getAnswersQuestionDao() {
        return answersQuestionDao;
    }

    public SecondAnswerDao getSecondAnswerDao() {
        return secondAnswerDao;
    }

    public AnswersDao getAnswersDao() {
        return answersDao;
    }

}
